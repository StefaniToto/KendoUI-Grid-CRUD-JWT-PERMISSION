/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Countries } from './countries';
export class PhoneInputComponent {
    constructor() {
        this._phoneData = {
            code: '',
            value: '',
            alpha2Code: ''
        };
        this.COUNTRIES = Countries;
        this.propagateChange = (/**
         * @param {?} val
         * @return {?}
         */
        (val) => { });
    }
    /**
     * @return {?}
     */
    get phoneData() {
        return this._phoneData;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set phoneData(val) {
        this._phoneData = val;
        this.propagateChange(this._phoneData);
    }
    /**
     * @param {?} val
     * @return {?}
     */
    selectCountry(val) {
        val = val.split('-');
        this.phoneData = Object.assign({}, this.phoneData, { code: val[0], alpha2Code: val[1] });
    }
    /**
     * @param {?} val
     * @return {?}
     */
    enterPhone(val) {
        this.phoneData = Object.assign({}, this.phoneData, { value: val });
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (value !== undefined) {
            this.phoneData = value;
        }
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.propagateChange = fn;
    }
    /**
     * @return {?}
     */
    registerOnTouched() { }
}
PhoneInputComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'app-phone-input',
                template: "<div class=\"phone-box form-group\">\n  <select\n    [attr.disabled]=\"isDisabled\"\n    #country\n    (change)=\"selectCountry(country.value)\"\n    class=\"phone-code\"\n    [(ngModel)]=\"phoneData.code + '-' + phoneData.alpha2Code\"\n  >\n    <option value=\"{{ country.callingCodes[0] }}-{{ country.alpha2Code }}\" *ngFor=\"let country of COUNTRIES\">\n      <span>{{ country.name }}</span>\n    </option>\n  </select>\n  <div class=\"phone-number-box\" [ngClass]=\"{ disabled: isDisabled }\">\n    <span class=\"plus-code\" *ngIf=\"phoneData.code\">(+{{ phoneData.code }}) </span>\n    <input\n      [attr.disabled]=\"isDisabled\"\n      type=\"text\"\n      #phone\n      (change)=\"enterPhone(phone.value)\"\n      class=\"phone-value\"\n      [(ngModel)]=\"phoneData.value\"\n    />\n  </div>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => PhoneInputComponent)),
                        multi: true
                    }
                ],
                styles: [".phone-box{position:relative;clear:both;border:1px solid #ccc;height:31px}.phone-box .phone-code{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;background-color:#333;color:#fff;border-radius:0;float:left;padding:5px;margin-right:10px;width:120px}.phone-box .phone-number-box{line-height:27px}.phone-box .phone-number-box .phone-value{border:0;background-color:transparent;width:125px}.phone-box .disabled{background-color:#e9ecef}"]
            }] }
];
PhoneInputComponent.propDecorators = {
    isDisabled: [{ type: Input }],
    _phoneData: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PhoneInputComponent.prototype.isDisabled;
    /** @type {?} */
    PhoneInputComponent.prototype._phoneData;
    /** @type {?} */
    PhoneInputComponent.prototype.COUNTRIES;
    /** @type {?} */
    PhoneInputComponent.prototype.propagateChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvbmUtaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1yZWFjdGl2ZS1mb3JtLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvcGhvbmUtaW5wdXQvcGhvbmUtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUF3QixpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFnQnhDLE1BQU0sT0FBTyxtQkFBbUI7SUFiaEM7UUFlVyxlQUFVLEdBQUc7WUFDcEIsSUFBSSxFQUFFLEVBQUU7WUFDUixLQUFLLEVBQUUsRUFBRTtZQUNULFVBQVUsRUFBRSxFQUFFO1NBQ2YsQ0FBQztRQUNLLGNBQVMsR0FBRyxTQUFTLENBQUM7UUFFN0Isb0JBQWU7Ozs7UUFBRyxDQUFDLEdBQVEsRUFBRSxFQUFFLEdBQUUsQ0FBQyxFQUFDO0lBK0JyQyxDQUFDOzs7O0lBN0JDLElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDOzs7OztJQUVELElBQUksU0FBUyxDQUFDLEdBQUc7UUFDZixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs7OztJQUVELGFBQWEsQ0FBQyxHQUFHO1FBQ2YsR0FBRyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMscUJBQVEsSUFBSSxDQUFDLFNBQVMsSUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUUsQ0FBQztJQUMzRSxDQUFDOzs7OztJQUVELFVBQVUsQ0FBQyxHQUFHO1FBQ1osSUFBSSxDQUFDLFNBQVMscUJBQVEsSUFBSSxDQUFDLFNBQVMsSUFBRSxLQUFLLEVBQUUsR0FBRyxHQUFFLENBQUM7SUFDckQsQ0FBQzs7Ozs7SUFFRCxVQUFVLENBQUMsS0FBVTtRQUNuQixJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDeEI7SUFDSCxDQUFDOzs7OztJQUVELGdCQUFnQixDQUFDLEVBQUU7UUFDakIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7OztJQUVELGlCQUFpQixLQUFJLENBQUM7OztZQXBEdkIsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixzekJBQTJDO2dCQUUzQyxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsRUFBQzt3QkFDbEQsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7O2FBQ0Y7Ozt5QkFFRSxLQUFLO3lCQUNMLEtBQUs7Ozs7SUFETix5Q0FBNkI7O0lBQzdCLHlDQUlFOztJQUNGLHdDQUE2Qjs7SUFFN0IsOENBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ291bnRyaWVzIH0gZnJvbSAnLi9jb3VudHJpZXMnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2FwcC1waG9uZS1pbnB1dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9waG9uZS1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Bob25lLWlucHV0LmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUGhvbmVJbnB1dENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQaG9uZUlucHV0Q29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICBASW5wdXQoKSBpc0Rpc2FibGVkOiBCb29sZWFuO1xuICBASW5wdXQoKSBfcGhvbmVEYXRhID0ge1xuICAgIGNvZGU6ICcnLFxuICAgIHZhbHVlOiAnJyxcbiAgICBhbHBoYTJDb2RlOiAnJ1xuICB9O1xuICBwdWJsaWMgQ09VTlRSSUVTID0gQ291bnRyaWVzO1xuXG4gIHByb3BhZ2F0ZUNoYW5nZSA9ICh2YWw6IGFueSkgPT4ge307XG5cbiAgZ2V0IHBob25lRGF0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcGhvbmVEYXRhO1xuICB9XG5cbiAgc2V0IHBob25lRGF0YSh2YWwpIHtcbiAgICB0aGlzLl9waG9uZURhdGEgPSB2YWw7XG4gICAgdGhpcy5wcm9wYWdhdGVDaGFuZ2UodGhpcy5fcGhvbmVEYXRhKTtcbiAgfVxuXG4gIHNlbGVjdENvdW50cnkodmFsKSB7XG4gICAgdmFsID0gdmFsLnNwbGl0KCctJyk7XG4gICAgdGhpcy5waG9uZURhdGEgPSB7IC4uLnRoaXMucGhvbmVEYXRhLCBjb2RlOiB2YWxbMF0sIGFscGhhMkNvZGU6IHZhbFsxXSB9O1xuICB9XG5cbiAgZW50ZXJQaG9uZSh2YWwpIHtcbiAgICB0aGlzLnBob25lRGF0YSA9IHsgLi4udGhpcy5waG9uZURhdGEsIHZhbHVlOiB2YWwgfTtcbiAgfVxuXG4gIHdyaXRlVmFsdWUodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnBob25lRGF0YSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm4pIHtcbiAgICB0aGlzLnByb3BhZ2F0ZUNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoKSB7fVxufVxuIl19