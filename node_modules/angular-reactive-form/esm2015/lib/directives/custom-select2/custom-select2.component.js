/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, forwardRef, ElementRef, Renderer } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import * as _ from 'lodash';
export class CustomSelect2Component {
    /**
     * @param {?} element
     * @param {?} renderer
     */
    constructor(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.defaultValue = [];
        this.onChange = (/**
         * @param {?} val
         * @return {?}
         */
        (val) => { });
        this.onTouched = (/**
         * @return {?}
         */
        () => { });
        this.disabled = false;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    writeValue(val) {
        if (val) {
            this.value = val;
        }
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set value(val) {
        this._value = val;
        this.onChange(this._value);
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.actionRender();
        }), 1);
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        if (this.isClear === true) {
            if (!_.isUndefined(this.options) && !_.isEmpty(this.options)) {
                _.map(this.options, (/**
                 * @param {?} i
                 * @return {?}
                 */
                i => {
                    i.selected = undefined;
                }));
                this.defaultValue = [];
                setTimeout((/**
                 * @return {?}
                 */
                () => {
                    this.actionRender();
                }), 1);
            }
        }
    }
    /**
     * @return {?}
     */
    actionRender() {
        // tslint:disable-next-line:prefer-const
        /** @type {?} */
        let $this = this;
        // tslint:disable-next-line:prefer-const
        /** @type {?} */
        let options = {};
        if (this.tags !== undefined && this.tags != null) {
            options.tags = this.tags;
        }
        if (this.isDisabled !== undefined && this.isDisabled != null && this.isDisabled === true) {
            options.disabled = true;
        }
        if (this.placeholder !== undefined && this.placeholder != null) {
            options.placeholder = this.placeholder;
        }
        $('#select2-reactive-form-' + this.id).select2(options);
        // tslint:disable-next-line:prefer-const
        /** @type {?} */
        let oldData = $('#select2-reactive-form-' + this.id).select2('data');
        if (oldData != null && oldData !== undefined && !_.isEmpty(oldData)) {
            _.forEach(oldData, (/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                $this.defaultValue.push(value.id);
            }));
            this.value = this.defaultValue;
        }
        $('#select2-reactive-form-' + this.id).change((/**
         * @return {?}
         */
        function () {
            // tslint:disable-next-line:prefer-const
            /** @type {?} */
            let value = $(this).val();
            $this.value = value;
        }));
    }
    /**
     * @return {?}
     */
    selectedAll() {
        _.map(this.options, (/**
         * @param {?} i
         * @return {?}
         */
        i => {
            i.selected = true;
        }));
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.defaultValue = [];
            this.actionRender();
        }), 1);
    }
    /**
     * @return {?}
     */
    clearAll() {
        _.map(this.options, (/**
         * @param {?} i
         * @return {?}
         */
        i => {
            delete i['selected'];
        }));
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.defaultValue = [];
            this.value = this.defaultValue;
            this.actionRender();
        }), 1);
    }
}
CustomSelect2Component.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'app-custom-select2',
                template: "<select id=\"select2-reactive-form-{{ id }}\" class=\"form-control\" multiple select2>\n  <option *ngFor=\"let opt of options\" value=\"{{ opt.value }}\" selected=\"{{ opt.selected }}\">{{ opt.label }}</option>\n</select>\n<a class=\"btn btn-primary btn-group\" *ngIf=\"isSelectAll === true\" (click)=\"selectedAll()\">{{ selectBtnText }}</a> <a class=\"btn btn-danger btn-group\" *ngIf=\"isSelectAll === true\" (click)=\"clearAll()\">{{ clearBtnText }}</a>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => CustomSelect2Component)),
                        multi: true
                    }
                ],
                styles: [".btn-group{color:#fff!important;margin-right:5px;margin-top:5px;padding:1px 6px;font-size:14px}"]
            }] }
];
/** @nocollapse */
CustomSelect2Component.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer }
];
CustomSelect2Component.propDecorators = {
    tags: [{ type: Input }],
    placeholder: [{ type: Input }],
    options: [{ type: Input }],
    id: [{ type: Input }],
    _value: [{ type: Input }],
    isClear: [{ type: Input }],
    isSelectAll: [{ type: Input }],
    selectBtnText: [{ type: Input }],
    clearBtnText: [{ type: Input }],
    isDisabled: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CustomSelect2Component.prototype.tags;
    /** @type {?} */
    CustomSelect2Component.prototype.placeholder;
    /** @type {?} */
    CustomSelect2Component.prototype.options;
    /** @type {?} */
    CustomSelect2Component.prototype.id;
    /** @type {?} */
    CustomSelect2Component.prototype._value;
    /** @type {?} */
    CustomSelect2Component.prototype.isClear;
    /** @type {?} */
    CustomSelect2Component.prototype.isSelectAll;
    /** @type {?} */
    CustomSelect2Component.prototype.selectBtnText;
    /** @type {?} */
    CustomSelect2Component.prototype.clearBtnText;
    /** @type {?} */
    CustomSelect2Component.prototype.isDisabled;
    /** @type {?} */
    CustomSelect2Component.prototype.defaultValue;
    /**
     * @type {?}
     * @private
     */
    CustomSelect2Component.prototype.disabled;
    /**
     * @type {?}
     * @private
     */
    CustomSelect2Component.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    CustomSelect2Component.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    CustomSelect2Component.prototype.element;
    /**
     * @type {?}
     * @private
     */
    CustomSelect2Component.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,