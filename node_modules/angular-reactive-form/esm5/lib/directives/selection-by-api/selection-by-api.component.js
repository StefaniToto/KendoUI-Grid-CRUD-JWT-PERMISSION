/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, forwardRef, Injector } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { SelectionService } from './selection-by-api';
import * as _ from 'lodash';
var SelectionByApiComponent = /** @class */ (function () {
    function SelectionByApiComponent(api, injector) {
        var _this = this;
        this.api = api;
        this.injector = injector;
        this.isShow = false;
        this.isSearching = false;
        this.UPLOAD_DIRECTIVE_HEADERS = this.injector.get('UPLOAD_DIRECTIVE_HEADERS');
        this.UPLOAD_DIRECTIVE_API_URL = this.injector.get('UPLOAD_DIRECTIVE_API_URL');
        this.KEY_CODE = {
            UP_ARROW: 38,
            DOWN_ARROW: 40
        };
        this.url = (/**
         * @param {?} apiUrl
         * @param {?} search
         * @return {?}
         */
        function (apiUrl, search) {
            return apiUrl + _this.apiUpload + search;
            // tslint:disable-next-line:semicolon
        });
        this.propagateChange = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) { });
    }
    /**
     * @return {?}
     */
    SelectionByApiComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var $this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            $('body').click((/**
             * @return {?}
             */
            function () {
                if (event.target !== document.getElementById('search-single-selection-reative-form')) {
                    $this.isShow = false;
                }
            }));
            if (_this.value) {
                _this.text = _this.fieldName(_this.value);
                /** @type {?} */
                var api = _this.url(_this.UPLOAD_DIRECTIVE_API_URL, _this.fieldName(_this.value));
                /** @type {?} */
                var requestHeaders = _this.UPLOAD_DIRECTIVE_HEADERS;
                _this.api.getAll(api, requestHeaders, _this.method).subscribe((/**
                 * @param {?} response
                 * @return {?}
                 */
                function (response) {
                    _this.options = _this.resultTransformer(response);
                    _this.addSelected();
                }));
            }
        }), 1);
    };
    /**
     * @return {?}
     */
    SelectionByApiComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.isClear === true) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.value = null;
                _this.text = null;
            }), 1);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SelectionByApiComponent.prototype.filterData = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        document.getElementById('search-single-selection-reative-form').setAttribute('disabled', 'true');
        this.options = [];
        if (event.length <= 0) {
            this.value = null;
            this.options = [];
            document.getElementById('search-single-selection-reative-form').removeAttribute('disabled');
            document.getElementById('search-single-selection-reative-form').focus();
        }
        if (event.length >= this.lengthToSearch) {
            this.isSearching = true;
            this.isShow = true;
            this.value = null;
            /** @type {?} */
            var api = this.url(this.UPLOAD_DIRECTIVE_API_URL, event);
            /** @type {?} */
            var requestHeaders = this.UPLOAD_DIRECTIVE_HEADERS;
            this.api.getAll(api, requestHeaders, this.method).subscribe((/**
             * @param {?} response
             * @return {?}
             */
            function (response) {
                _this.options = _this.resultTransformer(response);
                _this.isSearching = false;
                document.getElementById('search-single-selection-reative-form').removeAttribute('disabled');
                document.getElementById('search-single-selection-reative-form').focus();
            }));
        }
    };
    /**
     * @return {?}
     */
    SelectionByApiComponent.prototype.addSelected = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var $this = this;
        _.map(this.options, (/**
         * @param {?} item
         * @param {?} key
         * @return {?}
         */
        function (item, key) {
            delete item.selected;
            if (_.isEqual(item, $this.value)) {
                _.assign(item, { selected: true });
            }
        }));
    };
    /**
     * @param {?} item
     * @return {?}
     */
    SelectionByApiComponent.prototype.detailClick = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.setValue(item);
        this.isShow = false;
    };
    /**
     * @return {?}
     */
    SelectionByApiComponent.prototype.changeStatusOptions = /**
     * @return {?}
     */
    function () {
        this.isShow === false ? (this.isShow = true) : (this.isShow = false);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SelectionByApiComponent.prototype.onKeydown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (event.keyCode === this.KEY_CODE.DOWN_ARROW && this.isShow) {
            _.forEach(this.options, (/**
             * @param {?} i
             * @return {?}
             */
            function (i) { return delete i.selected; }));
            if (this.value) {
                /** @type {?} */
                var current_item = _.find(this.options, (/**
                 * @param {?} i
                 * @return {?}
                 */
                function (i) { return _this.fieldName(i) === _this.fieldName(_this.value); }));
                if (current_item) {
                    /** @type {?} */
                    var index_current_item = this.options.indexOf(current_item);
                    /** @type {?} */
                    var last_item = this.options.slice(-1).pop();
                    /** @type {?} */
                    var index_last_item = this.options.indexOf(last_item);
                    if (index_current_item === index_last_item) {
                        this.value = this.options[0];
                    }
                    else {
                        this.value = this.options[index_current_item + 1];
                    }
                }
                else {
                    this.value = this.options[0];
                }
            }
            else {
                this.value = this.options[0];
            }
            this.setValue(this.value);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SelectionByApiComponent.prototype.onKeyup = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (event.keyCode === this.KEY_CODE.UP_ARROW && this.isShow) {
            _.forEach(this.options, (/**
             * @param {?} i
             * @return {?}
             */
            function (i) { return delete i.selected; }));
            if (this.value) {
                /** @type {?} */
                var current_item = _.find(this.options, (/**
                 * @param {?} i
                 * @return {?}
                 */
                function (i) { return _this.fieldName(i) === _this.fieldName(_this.value); }));
                if (current_item) {
                    /** @type {?} */
                    var index_current_item = this.options.indexOf(current_item);
                    /** @type {?} */
                    var head_item = this.options[0];
                    /** @type {?} */
                    var index_head_item = this.options.indexOf(head_item);
                    if (index_current_item === index_head_item) {
                        this.value = this.options.slice(-1).pop();
                    }
                    else {
                        this.value = this.options[index_current_item - 1];
                    }
                }
                else {
                    this.value = this.options.slice(-1).pop();
                }
            }
            else {
                this.value = this.options.slice(-1).pop();
            }
            this.setValue(this.value);
        }
    };
    /**
     * @param {?} array
     * @return {?}
     */
    SelectionByApiComponent.prototype._isEmpty = /**
     * @param {?} array
     * @return {?}
     */
    function (array) {
        return _.isEmpty(array) ? true : false;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    SelectionByApiComponent.prototype.setValue = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.text = this.fieldName(item);
        this.value = item;
        this.addSelected();
    };
    Object.defineProperty(SelectionByApiComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._value = val;
            this.propagateChange(this._value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    SelectionByApiComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== undefined) {
            this.value = value;
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SelectionByApiComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.propagateChange = fn;
    };
    /**
     * @return {?}
     */
    SelectionByApiComponent.prototype.registerOnTouched = /**
     * @return {?}
     */
    function () { };
    SelectionByApiComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'selection-by-api',
                    template: "<div id=\"okokokokok\" class=\"form-group selection-group\">\n  <input\n    autocomplete=\"off\"\n    id=\"search-single-selection-reative-form\"\n    class=\"form-control search-text\"\n    (click)=\"changeStatusOptions()\"\n    type=\"text\"\n    name=\"search\"\n    #search\n    [(ngModel)]=\"text\"\n    (ngModelChange)=\"filterData(search.value)\"\n    (keydown)=\"onKeydown($event)\"\n    (keyup)=\"onKeyup($event)\"\n  />\n\n  <div *ngIf=\"!_isEmpty(options) && isShow\" class=\"scrollbar\" id=\"style-default\">\n    <div class=\"force-overflow\">\n      <p class=\"rAtF_sBA_options__item\" *ngFor=\"let item of options\" [ngClass]=\"{ 'selection-by-api__selected': item.selected }\" (click)=\"detailClick(item)\">\n        {{ fieldName(item) }}\n      </p>\n    </div>\n  </div>\n  <div *ngIf=\"_isEmpty(options) && isShow && !isSearching\" class=\"options-group\">\n    <p>Resource not found</p>\n  </div>\n  <div *ngIf=\"isShow && isSearching\" class=\"options-group\">\n    <p>Searching...</p>\n  </div>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return SelectionByApiComponent; })),
                            multi: true
                        },
                        SelectionService
                    ],
                    styles: [".selection-group{position:relative}.options-group{position:absolute;border:1px solid #d3d3d3;border-radius:5px;width:100%;z-index:9;background-color:#fff;border-top:none}.options-group p,.scrollbar p{cursor:pointer;padding:.375rem .75rem;margin:0}.options-group p:focus,.options-group p:hover,.rAtF_sBA_options__item:focus,.scrollbar p:focus,.scrollbar p:hover,.selection-by-api__selected{background-color:#6495ed;color:#fff}.scrollbar{position:absolute;max-height:200px;background:#fff;overflow-y:scroll;border:1px solid #d3d3d3;border-radius:5px;width:100%;z-index:9;border-top:none}.force-overflow{max-height:200px}"]
                }] }
    ];
    /** @nocollapse */
    SelectionByApiComponent.ctorParameters = function () { return [
        { type: SelectionService },
        { type: Injector }
    ]; };
    SelectionByApiComponent.propDecorators = {
        _value: [{ type: Input }],
        resultTransformer: [{ type: Input }],
        apiUpload: [{ type: Input }],
        headers: [{ type: Input }],
        fieldName: [{ type: Input }],
        lengthToSearch: [{ type: Input }],
        isClear: [{ type: Input }],
        method: [{ type: Input }]
    };
    return SelectionByApiComponent;
}());
export { SelectionByApiComponent };
if (false) {
    /** @type {?} */
    SelectionByApiComponent.prototype._value;
    /** @type {?} */
    SelectionByApiComponent.prototype.resultTransformer;
    /** @type {?} */
    SelectionByApiComponent.prototype.apiUpload;
    /** @type {?} */
    SelectionByApiComponent.prototype.headers;
    /** @type {?} */
    SelectionByApiComponent.prototype.fieldName;
    /** @type {?} */
    SelectionByApiComponent.prototype.lengthToSearch;
    /** @type {?} */
    SelectionByApiComponent.prototype.isClear;
    /** @type {?} */
    SelectionByApiComponent.prototype.method;
    /** @type {?} */
    SelectionByApiComponent.prototype.text;
    /** @type {?} */
    SelectionByApiComponent.prototype.options;
    /** @type {?} */
    SelectionByApiComponent.prototype.isShow;
    /** @type {?} */
    SelectionByApiComponent.prototype.isSearching;
    /** @type {?} */
    SelectionByApiComponent.prototype.UPLOAD_DIRECTIVE_HEADERS;
    /** @type {?} */
    SelectionByApiComponent.prototype.UPLOAD_DIRECTIVE_API_URL;
    /** @type {?} */
    SelectionByApiComponent.prototype.KEY_CODE;
    /** @type {?} */
    SelectionByApiComponent.prototype.url;
    /** @type {?} */
    SelectionByApiComponent.prototype.propagateChange;
    /**
     * @type {?}
     * @private
     */
    SelectionByApiComponent.prototype.api;
    /**
     * @type {?}
     * @private
     */
    SelectionByApiComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,