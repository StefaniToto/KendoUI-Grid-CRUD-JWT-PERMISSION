/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, forwardRef, Injector } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import * as _ from 'lodash';
import { SelectionService } from '../selection-by-api/selection-by-api';
var MultiSelectionByApiComponent = /** @class */ (function () {
    function MultiSelectionByApiComponent(api, injector) {
        var _this = this;
        this.api = api;
        this.injector = injector;
        this.isShow = false;
        this.result = [];
        this.url = (/**
         * @param {?} apiUrl
         * @param {?} search
         * @return {?}
         */
        function (apiUrl, search) {
            return apiUrl + _this.apiUpload + search;
        });
        this.propagateChange = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) { });
    }
    /**
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (_this.value) {
                _this.result = _this.value;
            }
        }), 1);
    };
    /**
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.isClear === true) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.value = [];
                _this.result = [];
                _.forEach(_this.options, (/**
                 * @param {?} value
                 * @return {?}
                 */
                function (value) {
                    value.selected = false;
                }));
                _this.mapOptionsResult(_this.options, _this.result);
            }), 1);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.filterData = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        /** @type {?} */
        var UPLOAD_DIRECTIVE_HEADERS = this.injector.get('UPLOAD_DIRECTIVE_HEADERS');
        /** @type {?} */
        var UPLOAD_DIRECTIVE_API_URL = this.injector.get('UPLOAD_DIRECTIVE_API_URL');
        if (event.length >= this.lengthToSearch) {
            /** @type {?} */
            var api = this.url(UPLOAD_DIRECTIVE_API_URL, event);
            /** @type {?} */
            var requestHeaders = UPLOAD_DIRECTIVE_HEADERS;
            this.api.getAll(api, requestHeaders, this.method).subscribe((/**
             * @param {?} response
             * @return {?}
             */
            function (response) {
                _this.options = _this.resultTransformer(response);
                _this.mapOptionsResult(_this.options, _this.result);
            }));
            this.isShow = true;
        }
    };
    /**
     * @param {?} item
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.detailClick = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var $this = this;
        if (item.selected) {
            _.remove(this.result, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return JSON.stringify(n) === JSON.stringify(item);
            }));
            _.forEach(this.options, (/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (JSON.stringify(value) === JSON.stringify(item)) {
                    value.selected = false;
                }
            }));
            this.mapOptionsResult(this.options, this.result);
            this.isShow = false;
            this.value = this.result;
        }
        else {
            this.result.push(item);
            this.mapOptionsResult(this.options, this.result);
            this.isShow = false;
            this.value = this.result;
        }
    };
    /**
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.changeStatusOptions = /**
     * @return {?}
     */
    function () {
        this.isShow === false ? (this.isShow = true) : (this.isShow = false);
    };
    /**
     * @param {?} array
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype._isEmpty = /**
     * @param {?} array
     * @return {?}
     */
    function (array) {
        return _.isEmpty(array) ? true : false;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.removeItem = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var $this = this;
        _.remove(this.result, (/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            return JSON.stringify(n) === JSON.stringify(item);
        }));
        _.forEach(this.options, (/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (JSON.stringify(value) === JSON.stringify(item)) {
                value.selected = false;
            }
        }));
        this.mapOptionsResult(this.options, this.result);
        this.isShow = false;
        this.value = this.result;
    };
    /**
     * @param {?} options
     * @param {?} result
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.mapOptionsResult = /**
     * @param {?} options
     * @param {?} result
     * @return {?}
     */
    function (options, result) {
        _.map(options, (/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _.forEach(result, (/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (JSON.stringify(item) === JSON.stringify(value)) {
                    item.selected = true;
                }
            }));
        }));
        this.options = options;
    };
    Object.defineProperty(MultiSelectionByApiComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._value = val;
            this.propagateChange(this._value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== undefined) {
            this.value = value;
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.propagateChange = fn;
    };
    /**
     * @return {?}
     */
    MultiSelectionByApiComponent.prototype.registerOnTouched = /**
     * @return {?}
     */
    function () { };
    MultiSelectionByApiComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'multi-selection-by-api',
                    template: "<div class=\"form-group selection-group\">\n  <div class=\"form-control\" id=\"multi-selection-by-api-reactive-form\" (click)=\"changeStatusOptions()\">\n    <span class=\"name-tag\" *ngFor=\"let item of result\">\n      {{ fieldName(item) }} <i class=\"fa fa-times remove-options-selection-reactive\" aria-hidden=\"true\" (click)=\"removeItem(item)\"></i>\n    </span>\n  </div>\n  <div *ngIf=\"isShow\" id=\"multil-options-group-reactive-form\">\n    <input\n      autocomplete=\"off\"\n      id=\"search-multi-selection-by-api-reactive-form\"\n      class=\"form-control search-text\"\n      type=\"text\"\n      name=\"search\"\n      #search\n      [(ngModel)]=\"text\"\n      (ngModelChange)=\"filterData(search.value)\"\n    />\n    <div *ngIf=\"options\">\n      <p *ngFor=\"let item of options\" [ngClass]=\"item.selected ? 'selected' : 'unselected'\" (click)=\"detailClick(item)\">{{ fieldName(item) }}</p>\n    </div>\n    <div *ngIf=\"_isEmpty(options)\"><p>Resource not found</p></div>\n  </div>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return MultiSelectionByApiComponent; })),
                            multi: true
                        },
                        SelectionService
                    ],
                    styles: [".selection-group{position:relative}#multil-options-group-reactive-form{position:absolute;border:1px solid #d3d3d3;border-radius:5px;width:100%;z-index:9;background-color:#fff;border-top:none;padding:10px}#multil-options-group-reactive-form p{cursor:pointer;padding:.375rem .75rem;margin:0}#multil-options-group-reactive-form .unselected:hover{background-color:#6495ed;color:#fff}.name-tag{padding:3px 5px;background-color:#dcdcdc;border:1px solid grey;border-radius:5px;margin-right:5px}.selected{background-color:#c5c5c5}"]
                }] }
    ];
    /** @nocollapse */
    MultiSelectionByApiComponent.ctorParameters = function () { return [
        { type: SelectionService },
        { type: Injector }
    ]; };
    MultiSelectionByApiComponent.propDecorators = {
        _value: [{ type: Input }],
        resultTransformer: [{ type: Input }],
        apiUpload: [{ type: Input }],
        headers: [{ type: Input }],
        fieldName: [{ type: Input }],
        lengthToSearch: [{ type: Input }],
        isClear: [{ type: Input }],
        method: [{ type: Input }]
    };
    return MultiSelectionByApiComponent;
}());
export { MultiSelectionByApiComponent };
if (false) {
    /** @type {?} */
    MultiSelectionByApiComponent.prototype._value;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.resultTransformer;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.apiUpload;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.headers;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.fieldName;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.lengthToSearch;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.isClear;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.method;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.text;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.options;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.isShow;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.result;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.url;
    /** @type {?} */
    MultiSelectionByApiComponent.prototype.propagateChange;
    /**
     * @type {?}
     * @private
     */
    MultiSelectionByApiComponent.prototype.api;
    /**
     * @type {?}
     * @private
     */
    MultiSelectionByApiComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,