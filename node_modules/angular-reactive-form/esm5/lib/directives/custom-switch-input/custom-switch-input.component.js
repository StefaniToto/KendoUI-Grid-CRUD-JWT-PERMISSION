/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input, ElementRef, Renderer } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var CustomSwitchInputComponent = /** @class */ (function () {
    function CustomSwitchInputComponent(element, renderer) {
        this.element = element;
        this.renderer = renderer;
        this.onChange = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) { });
        this.onTouched = (/**
         * @return {?}
         */
        function () { });
        this.disabled = false;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.writeValue = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (val) {
            this.value = val;
        }
    };
    Object.defineProperty(CustomSwitchInputComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._value = val;
            this.onChange(this._value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} fn
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.isClear === true) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.value = false;
            }), 1);
        }
    };
    /**
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            if (!_this.value || _this.value === '') {
                _this.value = false;
            }
        }), 1);
    };
    /**
     * @param {?} values
     * @return {?}
     */
    CustomSwitchInputComponent.prototype.FieldsChange = /**
     * @param {?} values
     * @return {?}
     */
    function (values) {
        this.value = values.currentTarget.checked;
    };
    CustomSwitchInputComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'custom-switch-input',
                    template: "<!-- <input type=\"checkbox\" [(ngModel)]=\"value\" id=\"switch\" (change)=\"FieldsChange($event)\" /><label for=\"switch\">Toggle</label> -->\n<div class=\"flatRoundedCheckbox\">\n  <input\n    [disabled]=\"isDisabled\"\n    type=\"checkbox\"\n    [(ngModel)]=\"value\"\n    id=\"rf_switch-{{ id }}\"\n    (change)=\"FieldsChange($event)\"\n    type=\"checkbox\"\n    name=\"\"\n    id=\"t2\"\n    checked\n  />\n  <label for=\"rf_switch-{{ id }}\"></label>\n  <div></div>\n</div>\n",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return CustomSwitchInputComponent; })),
                            multi: true
                        }
                    ],
                    styles: [".flatRoundedCheckbox{width:25px;height:11px;position:relative}.flatRoundedCheckbox div{width:100%;height:100%;background:#7b7b7b;border-radius:50px;position:relative;top:-21px}.flatRoundedCheckbox label{display:block;width:13px;height:13px;border-radius:50px;transition:.5s;cursor:pointer;position:absolute;top:2px;z-index:1;left:-1px;background:#fff;box-shadow:0 3px 6px 0 #00000029}.flatRoundedCheckbox input[type=checkbox]{width:0;height:0;opacity:0}.flatRoundedCheckbox input[type=checkbox]:checked~div{background:#f48131}.flatRoundedCheckbox input[type=checkbox]:checked~label{left:15px}"]
                }] }
    ];
    /** @nocollapse */
    CustomSwitchInputComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer }
    ]; };
    CustomSwitchInputComponent.propDecorators = {
        _value: [{ type: Input }],
        isClear: [{ type: Input }],
        id: [{ type: Input }],
        isDisabled: [{ type: Input }]
    };
    return CustomSwitchInputComponent;
}());
export { CustomSwitchInputComponent };
if (false) {
    /** @type {?} */
    CustomSwitchInputComponent.prototype._value;
    /** @type {?} */
    CustomSwitchInputComponent.prototype.isClear;
    /** @type {?} */
    CustomSwitchInputComponent.prototype.id;
    /** @type {?} */
    CustomSwitchInputComponent.prototype.isDisabled;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.disabled;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    CustomSwitchInputComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXN3aXRjaC1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXJlYWN0aXZlLWZvcm0vIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jdXN0b20tc3dpdGNoLWlucHV0L2N1c3RvbS1zd2l0Y2gtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFVBQVUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDckgsT0FBTyxFQUFFLGlCQUFpQixFQUF3QixNQUFNLGdCQUFnQixDQUFDO0FBRXpFO0lBd0JFLG9DQUFvQixPQUFtQixFQUFVLFFBQWtCO1FBQS9DLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2pFLElBQUksQ0FBQyxRQUFROzs7O1FBQUcsVUFBQyxHQUFRLElBQU0sQ0FBQyxDQUFBLENBQUM7UUFDakMsSUFBSSxDQUFDLFNBQVM7OztRQUFHLGNBQU8sQ0FBQyxDQUFBLENBQUM7UUFDMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQzs7Ozs7SUFFRCwrQ0FBVTs7OztJQUFWLFVBQVcsR0FBUTtRQUNqQixJQUFJLEdBQUcsRUFBRTtZQUNQLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1NBQ2xCO0lBQ0gsQ0FBQztJQUVELHNCQUFJLDZDQUFLOzs7O1FBQVQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQzs7Ozs7UUFFRCxVQUFVLEdBQUc7WUFDWCxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztZQUNsQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QixDQUFDOzs7T0FMQTs7Ozs7SUFPRCxxREFBZ0I7Ozs7SUFBaEIsVUFBaUIsRUFBTztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7OztJQUVELHNEQUFpQjs7OztJQUFqQixVQUFrQixFQUFPO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRUQscURBQWdCOzs7O0lBQWhCLFVBQWlCLFVBQW1CO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxnREFBVzs7O0lBQVg7UUFBQSxpQkFNQztRQUxDLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxJQUFJLEVBQUU7WUFDekIsVUFBVTs7O1lBQUM7Z0JBQ1QsS0FBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDckIsQ0FBQyxHQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ1A7SUFDSCxDQUFDOzs7O0lBRUQsb0RBQWU7OztJQUFmO1FBQUEsaUJBTUM7UUFMQyxVQUFVOzs7UUFBQztZQUNULElBQUksQ0FBQyxLQUFJLENBQUMsS0FBSyxJQUFJLEtBQUksQ0FBQyxLQUFLLEtBQUssRUFBRSxFQUFFO2dCQUNwQyxLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQzthQUNwQjtRQUNILENBQUMsR0FBRSxDQUFDLENBQUMsQ0FBQztJQUNSLENBQUM7Ozs7O0lBRUQsaURBQVk7Ozs7SUFBWixVQUFhLE1BQVc7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQztJQUM1QyxDQUFDOztnQkEzRUYsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQiwrZUFBbUQ7b0JBRW5ELFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSwwQkFBMEIsRUFBMUIsQ0FBMEIsRUFBQzs0QkFDekQsS0FBSyxFQUFFLElBQUk7eUJBQ1o7cUJBQ0Y7O2lCQUNGOzs7O2dCQWY4QyxVQUFVO2dCQUFFLFFBQVE7Ozt5QkFpQmhFLEtBQUs7MEJBQ0wsS0FBSztxQkFDTCxLQUFLOzZCQUNMLEtBQUs7O0lBMkRSLGlDQUFDO0NBQUEsQUE1RUQsSUE0RUM7U0EvRFksMEJBQTBCOzs7SUFDckMsNENBQWdCOztJQUNoQiw2Q0FBMEI7O0lBQzFCLHdDQUFZOztJQUNaLGdEQUE2Qjs7Ozs7SUFHN0IsOENBQTJCOzs7OztJQUMzQiw4Q0FBMEI7Ozs7O0lBQzFCLCtDQUE0Qjs7Ozs7SUFFaEIsNkNBQTJCOzs7OztJQUFFLDhDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBmb3J3YXJkUmVmLCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIsIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2N1c3RvbS1zd2l0Y2gtaW5wdXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vY3VzdG9tLXN3aXRjaC1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2N1c3RvbS1zd2l0Y2gtaW5wdXQuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBDdXN0b21Td2l0Y2hJbnB1dENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBDdXN0b21Td2l0Y2hJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBfdmFsdWU7XG4gIEBJbnB1dCgpIGlzQ2xlYXI6IEJvb2xlYW47XG4gIEBJbnB1dCgpIGlkO1xuICBASW5wdXQoKSBpc0Rpc2FibGVkOiBCb29sZWFuO1xuXG5cbiAgcHJpdmF0ZSBvbkNoYW5nZTogRnVuY3Rpb247XG4gIHByaXZhdGUgZGlzYWJsZWQ6IGJvb2xlYW47XG4gIHByaXZhdGUgb25Ub3VjaGVkOiBGdW5jdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyKSB7XG4gICAgdGhpcy5vbkNoYW5nZSA9ICh2YWw6IGFueSkgPT4ge307XG4gICAgdGhpcy5vblRvdWNoZWQgPSAoKSA9PiB7fTtcbiAgICB0aGlzLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICB3cml0ZVZhbHVlKHZhbDogYW55KTogdm9pZCB7XG4gICAgaWYgKHZhbCkge1xuICAgICAgdGhpcy52YWx1ZSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbCkge1xuICAgIHRoaXMuX3ZhbHVlID0gdmFsO1xuICAgIHRoaXMub25DaGFuZ2UodGhpcy5fdmFsdWUpO1xuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cblxuICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmRpc2FibGVkID0gaXNEaXNhYmxlZDtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIGlmICh0aGlzLmlzQ2xlYXIgPT09IHRydWUpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnZhbHVlID0gZmFsc2U7XG4gICAgICB9LCAxKTtcbiAgICB9XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMudmFsdWUgfHwgdGhpcy52YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0sIDEpO1xuICB9XG5cbiAgRmllbGRzQ2hhbmdlKHZhbHVlczogYW55KSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlcy5jdXJyZW50VGFyZ2V0LmNoZWNrZWQ7XG4gIH1cbn1cbiJdfQ==