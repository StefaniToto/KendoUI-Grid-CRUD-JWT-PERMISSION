/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
// tslint:disable:no-access-missing-member
import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { PagerContextService } from "./pager-context.service";
import { PagerElementComponent } from './pager-element.component';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * Displays buttons for navigating to the first and to the previous page ([see example]({% slug pager_settings %})).
 */
var PagerPrevButtonsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PagerPrevButtonsComponent, _super);
    function PagerPrevButtonsComponent(localization, pagerContext, cd) {
        return _super.call(this, localization, pagerContext, cd) || this;
    }
    Object.defineProperty(PagerPrevButtonsComponent.prototype, "disabled", {
        /**
         * @hidden
         *
         * @readonly
         * @type {boolean}
         * @memberOf PagerPrevButtonsComponent
         */
        get: function () {
            return this.currentPage === 1 || !this.total;
        },
        enumerable: true,
        configurable: true
    });
    PagerPrevButtonsComponent.prototype.onChanges = function (_a) {
        var total = _a.total, skip = _a.skip, pageSize = _a.pageSize;
        this.total = total;
        this.skip = skip;
        this.pageSize = pageSize;
        this.cd.markForCheck();
    };
    PagerPrevButtonsComponent.decorators = [
        { type: Component, args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-datapager-prev-buttons',
                    template: "\n        <button\n            type=\"button\"\n            class=\"k-link k-pager-nav k-pager-first\"\n            [class.k-state-disabled]=\"disabled\"\n            [title]=\"textFor('firstPage')\"\n            [attr.aria-label]=\"textFor('firstPage')\"\n            [attr.aria-disabled]=\"disabled ? true : undefined\"\n            (click)=\"currentPage !== 1 ? changePage(0) : false\">\n            <span class=\"k-icon k-i-seek-w\" [attr.aria-label]=\"textFor('firstPage')\"></span>\n        </button>\n        <button\n            type=\"button\"\n            class=\"k-link k-pager-nav\"\n            [class.k-state-disabled]=\"disabled\"\n            [title]=\"textFor('previousPage')\"\n            [attr.aria-label]=\"textFor('previousPage')\"\n            [attr.aria-disabled]=\"disabled ? true : undefined\"\n            (click)=\"currentPage !== 1 ? changePage(currentPage-2) : false\">\n            <span class=\"k-icon k-i-arrow-w\" [attr.aria-label]=\"textFor('previousPage')\"></span>\n        </button>\n    "
                },] },
    ];
    /** @nocollapse */
    PagerPrevButtonsComponent.ctorParameters = function () { return [
        { type: LocalizationService },
        { type: PagerContextService },
        { type: ChangeDetectorRef }
    ]; };
    return PagerPrevButtonsComponent;
}(PagerElementComponent));
export { PagerPrevButtonsComponent };
