/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, Input, Output, EventEmitter, ViewChildren, QueryList } from '@angular/core';
/**
 * @hidden
 */
export class ToolBarButtonListComponent {
    constructor() {
        this.disabled = false;
        this.look = 'default';
        this.itemClick = new EventEmitter();
    }
    getText(dataItem) {
        if (dataItem) {
            return this.textField ? dataItem[this.textField] : dataItem.text || dataItem;
        }
        return undefined;
    }
    onClick(item, index) {
        const dataItem = this.data[index];
        if (item.click) {
            item.click(dataItem);
        }
        this.itemClick.emit(dataItem);
    }
}
ToolBarButtonListComponent.decorators = [
    { type: Component, args: [{
                selector: 'kendo-toolbar-buttonlist',
                template: `
        <button
            #button
            type="button"
            tabindex="-1"
            kendoButton
            style="padding-left: 16px"
            class="k-overflow-button"
            *ngFor="let item of data; let i = index"
            [disabled]="disabled || item.disabled"
            [icon]="item.icon"
            [iconClass]="item.iconClass"
            [imageUrl]="item.imageUrl"
            [look]="look"
            (click)="onClick(item, i)"
        >
            {{ getText(item) }}
        </button>
    `
            },] },
];
ToolBarButtonListComponent.propDecorators = {
    data: [{ type: Input }],
    textField: [{ type: Input }],
    disabled: [{ type: Input }],
    look: [{ type: Input }],
    itemClick: [{ type: Output }],
    buttons: [{ type: ViewChildren, args: ['button',] }]
};
