/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Represents the Base ToolBar Tool component for Angular.
 * Extend this class to create custom tools.
 */
export declare class ToolBarToolComponent {
    tabIndex: number;
    overflows: boolean;
    visibility: string;
    toolbarTemplate: TemplateRef<any>;
    popupTemplate: TemplateRef<any>;
    /**
     * @hidden
     */
    responsive: boolean;
    readonly toolbarDisplay: string;
    readonly overflowDisplay: string;
    /**
     * Determines if the tool can be focused.
     * If the returned value is `false`, the tool will not be part of the keyboard navigation.
     * @returns `true` if the tool should take part in keyboard navigation.
     */
    canFocus(): boolean;
    /**
     * Called when the tool is focused.
     * The method accepts as argument the original browser event, which can be a `KeyboardEvent`, `MouseEvent` or `FocusEvent`.
     * @param {Event} ev - This is the event that caused the tool to be focused.
     */
    focus(ev?: Event): void;
    /**
     * Called when the tool is focused and one of the arrow keys is pressed.
     * The returned boolean value determines whether the `ToolBarComponent` will move the focus to the next/previous `ToolBarToolComponent`
     * ([see example]({% slug customcontroltypes_toolbar %}#toc-adding-keyboard-navigation)).
     * @param {KeyboardEvent} ev - The last pressed arrow key
     * @returns
     */
    handleKey(ev: KeyboardEvent): boolean;
}
